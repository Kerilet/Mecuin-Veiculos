{
	"info": {
		"_postman_id": "7ac5d2f5-ebf7-4732-bdf1-cbc435b339e0",
		"name": "Mecuin",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Colors",
			"item": [
				{
					"name": "GET colors",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Get colors must has Branco', () => {",
									"    pm.expect(pm.response.json()[0].title).to.eq('Branco');",
									"});",
									"",
									"pm.test('Status code must be 200', () => {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:3002/colors",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3002",
							"path": [
								"colors"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create color",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Should to create marsala color', () => {",
									"    pm.expect(pm.response.json().title).to.eq('Ciano');",
									"    pm.expect(pm.response.json().id).to.be.greaterThan(5);",
									"    pm.expect(pm.response.json().createdAt).to.be.a('string');",
									"});",
									"",
									"pm.test('Status code must be 201', () => {",
									"    pm.response.to.have.status(201);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Ciano\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3002/colors",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3002",
							"path": [
								"colors"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET color",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Get colors must has Branco', () => {",
									"    pm.expect(pm.response.json().title).to.eq('Branco');",
									"    pm.expect(pm.response.json().id).to.eq(1);",
									"    pm.expect(pm.response.json().createdAt).to.be.a('string');",
									"});",
									"",
									"pm.test('Status code must be 200', () => {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:3002/colors/1",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3002",
							"path": [
								"colors",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update color",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Should update color branco', () => {",
									"    pm.expect(pm.response.json().title).to.eq('Azul calcinha');",
									"    pm.expect(pm.response.json().id).to.eq(6);",
									"    pm.expect(pm.response.json().createdAt).to.be.a('string');",
									"});",
									"",
									"pm.test('Status code must be 200', () => {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Azul calcinha\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3002/colors/6",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3002",
							"path": [
								"colors",
								"6"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete a color",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Should body be empty', () => {",
									"    pm.expect(pm.response.body).to.be.undefined;",
									"});",
									"",
									"pm.test('Status code must be 204', () => {",
									"    pm.response.to.have.status(204);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://localhost:3002/colors/6",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3002",
							"path": [
								"colors",
								"6"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Versions",
			"item": [
				{
					"name": "GET versions",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Get colors must has Branco', () => {",
									"    pm.expect(pm.response.json()[0].title).to.eq('Branco');",
									"});",
									"",
									"pm.test('Status code must be 200', () => {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:3002/versions",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3002",
							"path": [
								"versions"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create version",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Should to create marsala color', () => {",
									"    pm.expect(pm.response.json().title).to.eq('Ciano');",
									"    pm.expect(pm.response.json().id).to.be.greaterThan(5);",
									"    pm.expect(pm.response.json().createdAt).to.be.a('string');",
									"});",
									"",
									"pm.test('Status code must be 201', () => {",
									"    pm.response.to.have.status(201);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Ciano\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3002/versions",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3002",
							"path": [
								"versions"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET version",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Get colors must has Branco', () => {",
									"    pm.expect(pm.response.json().title).to.eq('Branco');",
									"    pm.expect(pm.response.json().id).to.eq(1);",
									"    pm.expect(pm.response.json().createdAt).to.be.a('string');",
									"});",
									"",
									"pm.test('Status code must be 200', () => {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:3002/version/1",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3002",
							"path": [
								"version",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update version",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Should update color branco', () => {",
									"    pm.expect(pm.response.json().title).to.eq('Azul calcinha');",
									"    pm.expect(pm.response.json().id).to.eq(6);",
									"    pm.expect(pm.response.json().createdAt).to.be.a('string');",
									"});",
									"",
									"pm.test('Status code must be 200', () => {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Azul calcinha\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3002/version/6",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3002",
							"path": [
								"version",
								"6"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete a version",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Should body be empty', () => {",
									"    pm.expect(pm.response.body).to.be.undefined;",
									"});",
									"",
									"pm.test('Status code must be 204', () => {",
									"    pm.response.to.have.status(204);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://localhost:3002/version/6",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3002",
							"path": [
								"version",
								"6"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Brands",
			"item": [
				{
					"name": "GET brands",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Get colors must has Branco', () => {",
									"    pm.expect(pm.response.json()[0].title).to.eq('Branco');",
									"});",
									"",
									"pm.test('Status code must be 200', () => {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:3002/brands",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3002",
							"path": [
								"brands"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create brand",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Should to create marsala color', () => {",
									"    pm.expect(pm.response.json().title).to.eq('Ciano');",
									"    pm.expect(pm.response.json().id).to.be.greaterThan(5);",
									"    pm.expect(pm.response.json().createdAt).to.be.a('string');",
									"});",
									"",
									"pm.test('Status code must be 201', () => {",
									"    pm.response.to.have.status(201);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Ciano\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3002/brands",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3002",
							"path": [
								"brands"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET brand",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Get colors must has Branco', () => {",
									"    pm.expect(pm.response.json().title).to.eq('Branco');",
									"    pm.expect(pm.response.json().id).to.eq(1);",
									"    pm.expect(pm.response.json().createdAt).to.be.a('string');",
									"});",
									"",
									"pm.test('Status code must be 200', () => {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:3002/brands/1",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3002",
							"path": [
								"brands",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update brand",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Should update color branco', () => {",
									"    pm.expect(pm.response.json().title).to.eq('Azul calcinha');",
									"    pm.expect(pm.response.json().id).to.eq(6);",
									"    pm.expect(pm.response.json().createdAt).to.be.a('string');",
									"});",
									"",
									"pm.test('Status code must be 200', () => {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Azul calcinha\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3002/brands/6",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3002",
							"path": [
								"brands",
								"6"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete a brand",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Should body be empty', () => {",
									"    pm.expect(pm.response.body).to.be.undefined;",
									"});",
									"",
									"pm.test('Status code must be 204', () => {",
									"    pm.response.to.have.status(204);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://localhost:3002/brands/6",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3002",
							"path": [
								"brands",
								"6"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Gearshifts",
			"item": [
				{
					"name": "GET gearshift",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Get colors must has Branco', () => {",
									"    pm.expect(pm.response.json()[0].title).to.eq('Branco');",
									"});",
									"",
									"pm.test('Status code must be 200', () => {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:3002/gearshifts",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3002",
							"path": [
								"gearshifts"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create gearshift",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Should to create marsala color', () => {",
									"    pm.expect(pm.response.json().title).to.eq('Ciano');",
									"    pm.expect(pm.response.json().id).to.be.greaterThan(5);",
									"    pm.expect(pm.response.json().createdAt).to.be.a('string');",
									"});",
									"",
									"pm.test('Status code must be 201', () => {",
									"    pm.response.to.have.status(201);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Ciano\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3002/gearshifts",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3002",
							"path": [
								"gearshifts"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET gearshift",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Get colors must has Branco', () => {",
									"    pm.expect(pm.response.json().title).to.eq('Branco');",
									"    pm.expect(pm.response.json().id).to.eq(1);",
									"    pm.expect(pm.response.json().createdAt).to.be.a('string');",
									"});",
									"",
									"pm.test('Status code must be 200', () => {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:3002/gearshifts/1",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3002",
							"path": [
								"gearshifts",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update gearshift",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Should update color branco', () => {",
									"    pm.expect(pm.response.json().title).to.eq('Azul calcinha');",
									"    pm.expect(pm.response.json().id).to.eq(6);",
									"    pm.expect(pm.response.json().createdAt).to.be.a('string');",
									"});",
									"",
									"pm.test('Status code must be 200', () => {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Azul calcinha\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3002/gearshifts/6",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3002",
							"path": [
								"gearshifts",
								"6"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete a gearshift",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Should body be empty', () => {",
									"    pm.expect(pm.response.body).to.be.undefined;",
									"});",
									"",
									"pm.test('Status code must be 204', () => {",
									"    pm.response.to.have.status(204);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://localhost:3002/gearshift/6",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3002",
							"path": [
								"gearshift",
								"6"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Models",
			"item": [
				{
					"name": "GET models",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Get colors must has Branco', () => {",
									"    pm.expect(pm.response.json()[0].title).to.eq('Branco');",
									"});",
									"",
									"pm.test('Status code must be 200', () => {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:3002/models",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3002",
							"path": [
								"models"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create model",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Should to create marsala color', () => {",
									"    pm.expect(pm.response.json().title).to.eq('Ciano');",
									"    pm.expect(pm.response.json().id).to.be.greaterThan(5);",
									"    pm.expect(pm.response.json().createdAt).to.be.a('string');",
									"});",
									"",
									"pm.test('Status code must be 201', () => {",
									"    pm.response.to.have.status(201);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Ciano\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3002/models",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3002",
							"path": [
								"models"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET model",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Get colors must has Branco', () => {",
									"    pm.expect(pm.response.json().title).to.eq('Branco');",
									"    pm.expect(pm.response.json().id).to.eq(1);",
									"    pm.expect(pm.response.json().createdAt).to.be.a('string');",
									"});",
									"",
									"pm.test('Status code must be 200', () => {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:3002/models/1",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3002",
							"path": [
								"models",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update model",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Should update color branco', () => {",
									"    pm.expect(pm.response.json().title).to.eq('Azul calcinha');",
									"    pm.expect(pm.response.json().id).to.eq(6);",
									"    pm.expect(pm.response.json().createdAt).to.be.a('string');",
									"});",
									"",
									"pm.test('Status code must be 200', () => {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Azul calcinha\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3002/models/6",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3002",
							"path": [
								"models",
								"6"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete a model",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Should body be empty', () => {",
									"    pm.expect(pm.response.body).to.be.undefined;",
									"});",
									"",
									"pm.test('Status code must be 204', () => {",
									"    pm.response.to.have.status(204);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://localhost:3002/models/6",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3002",
							"path": [
								"models",
								"6"
							]
						}
					},
					"response": []
				}
			]
		}
	]
}